/* see License.txt for copyright and terms of use */

typedef unsigned int            uint;
struct pt_regs {
        long ebx;
        long ecx;
        long edx;
        long esi;
        long edi;
        long ebp;
        long eax;
        int  xds;
        int  xes;
        long orig_eax;
        long eip;
        int  xcs;
        long eflags;
        long esp;
        int  xss;
};
typedef int             __kernel_ssize_t;
typedef __kernel_ssize_t        ssize_t;
typedef unsigned int    __kernel_size_t;
typedef __kernel_size_t         size_t;
typedef int             __kernel_pid_t;
typedef __kernel_pid_t          pid_t;
typedef unsigned short  __kernel_dev_t;
typedef __kernel_dev_t          dev_t;
typedef unsigned short  __kernel_mode_t;
typedef __kernel_mode_t         mode_t;
typedef unsigned short  __kernel_old_uid_t;
typedef __kernel_old_uid_t      old_uid_t;
typedef unsigned short  __kernel_old_gid_t;
typedef __kernel_old_gid_t      old_gid_t;
typedef unsigned int    __kernel_uid32_t;
typedef __kernel_uid32_t        uid_t;
typedef unsigned int    __kernel_gid32_t;
typedef __kernel_gid32_t        gid_t;
struct __old_kernel_stat;
typedef long            __kernel_off_t;
typedef __kernel_off_t          off_t;
struct utimbuf;
struct tms;
struct timeval;
struct timezone;
struct timex;
typedef unsigned long old_sigset_t;              
typedef struct {
        unsigned long sig[(64  / 32 ) ];
} sigset_t;
typedef void (*__sighandler_t)(int);
struct sigaction;
struct oldold_utsname;
struct old_utsname;
struct new_utsname;
struct ustat;
struct  rusage;
struct rlimit;
typedef struct {
        unsigned long fds_bits [(1024 / (8 * sizeof(unsigned long)) ) ];
} __kernel_fd_set;
typedef __kernel_fd_set         fd_set;
struct sel_arg_struct; 
struct mmap_arg_struct;
struct statfs;
struct  itimerval;
struct stat;
struct stat64;
struct sysinfo;
struct vm86_struct;
struct module;
struct kernel_sym;
typedef char *		__kernel_caddr_t;
typedef __kernel_caddr_t	caddr_t;
typedef unsigned long		u_long;
typedef long long	__kernel_loff_t;
typedef __kernel_loff_t		loff_t;
struct iovec;
struct __sysctl_args {
        int *name;
        int nlen;
        void *oldval;
        size_t *oldlenp;
        void *newval;
        size_t newlen;
        unsigned long __unused[4];
};
struct sched_param;
struct timespec;
struct vm86plus_struct;
struct pollfd;
typedef struct siginfo siginfo_t;
typedef struct __user_cap_header_struct *cap_user_header_t;
typedef struct __user_cap_data_struct *cap_user_data_t;
typedef struct sigaltstack stack_t;

long sys_ni_syscall(void);
long sys_exit(int $user);
long sys_fork(struct pt_regs $user);
ssize_t sys_read(unsigned int $user, char * $user, size_t $user);
ssize_t sys_write(unsigned int $user, char * $user, size_t $user);
long sys_open(const char * $user, int $user, int $user);
long sys_close(unsigned int $user);
long sys_waitpid(pid_t $user, unsigned int * $user, int $user);
long sys_creat(const char * $user, int $user);
long sys_link(const char * $user, const char * $user);
long sys_unlink(const char * $user);
long sys_execve(char * $user, char ** $user, char ** $user, 
                struct pt_regs * $user);
long sys_chdir(const char * $user);
long sys_time(int * $user);
long sys_mknod(const char * $user, int $user, dev_t $user);
long sys_chmod(const char * $user, mode_t $user);
long sys_lchown16(const char * $user, old_uid_t $user, old_gid_t $user);
long sys_stat(char * $user, struct __old_kernel_stat * $user);
long sys_lseek(unsigned int $user, off_t $user, unsigned int $user);
long sys_getpid(void);
long sys_mount(char * $user, char * $user, char * $user,
               unsigned long $user, void * $user);
long sys_oldumount(char * $user);
long sys_setuid16(old_uid_t $user);
long sys_getuid16(void);
long sys_stime(int * $user);
long sys_ptrace(long $user, long $user, long $user, long $user);
long sys_alarm(unsigned int $user);
long sys_fstat(unsigned int $user, struct __old_kernel_stat * $user);
long sys_pause(void);
long sys_utime(char * $user, struct utimbuf *  $user);
long sys_access(const char * $user, int $user);
long sys_nice(int $user);
long sys_sync(void);
long sys_kill(int $user, int $user);
long sys_rename(const char * $user, const char * $user);
long sys_mkdir(const char * $user, int $user);
long sys_rmdir(const char * $user);
long sys_dup(unsigned int $user);
long sys_pipe(unsigned long * $user);
long sys_times(struct tms *  $user);
long sys_brk(unsigned long $user);
long sys_setgid16(old_gid_t $user);
long sys_getgid16(void);
long sys_signal(int $user, __sighandler_t $user);
long sys_geteuid16(void);
long sys_getegid16(void);
long sys_acct(const char * $user);
long sys_umount(char * $user, int $user);
long sys_ioctl(unsigned int $user, unsigned int $user, unsigned long $user);
long sys_fcntl(unsigned int $user, unsigned int $user, unsigned long $user);
long sys_setpgid(pid_t $user, pid_t $user);
long sys_olduname(struct oldold_utsname * $user);
long sys_umask(int $user);
long sys_chroot(const char * $user);
long sys_ustat(dev_t $user, struct ustat * $user);
long sys_dup2(unsigned int $user, unsigned int  $user);
long sys_getppid(void);
long sys_getpgrp(void);
pid_t sys_setsid(void);
long sys_sigaction(int $user, struct sigaction * $user,
                   struct sigaction * $user);
long sys_sgetmask(void);
long sys_ssetmask(int $user);
long sys_setreuid16(old_uid_t $user, old_uid_t $user);
long sys_setregid16(old_gid_t $user, old_gid_t $user);
long sys_sigsuspend(int $user, int $user, old_sigset_t $user);
long sys_sigpending(old_sigset_t * $user);
long sys_sethostname(char * $user, int $user);
long sys_setrlimit(unsigned int $user, struct rlimit * $user);
long sys_old_getrlimit(unsigned int $user, struct rlimit * $user);
long sys_getrusage(int $user, struct rusage * $user);
long sys_gettimeofday(struct timeval * $user, struct timezone * $user);
long sys_settimeofday(struct timeval * $user, struct timezone * $user);
long sys_getgroups16(int $user, old_gid_t * $user);
long sys_setgroups16(int $user, old_gid_t * $user);
long old_select(struct sel_arg_struct * $user);
long sys_symlink(const char * $user, const char *  $user);
long sys_lstat(char * $user, struct __old_kernel_stat * $user);
long sys_readlink(const char * $user, char * $user, int $user);
long sys_uselib(const char * $user);
long sys_swapon(const char * $user, int $user);
long sys_reboot(int $user, int $user, unsigned int $user, void * $user);
long old_readdir(unsigned int $user, void * $user, unsigned int $user);
long old_mmap(struct mmap_arg_struct * $user);
long sys_munmap(unsigned long $user, size_t $user);
long sys_truncate(const char * $user, unsigned long $user);
long sys_ftruncate(unsigned int $user, unsigned long $user);
long sys_fchmod(unsigned int $user, mode_t $user);
long sys_fchown16(unsigned int $user, old_uid_t $user, old_gid_t $user);
long sys_getpriority(int $user, int $user);
long sys_setpriority(int $user, int $user, int $user);
long sys_statfs(const char * $user, struct statfs * $user);
long sys_fstatfs(unsigned int $user, struct statfs *  $user);
long sys_ioperm(unsigned long $user, unsigned long $user, int $user);
long sys_socketcall(int $user, unsigned long * $user);
long sys_syslog(int $user, char * $user, int $user);
long sys_setitimer(int $user, struct itimerval * $user,
                              struct itimerval * $user);
long sys_getitimer(int $user, struct itimerval * $user);
long sys_newstat(char * $user, struct stat * $user);
long sys_newlstat(char * $user, struct stat * $user);
long sys_newfstat(unsigned int $user, struct stat * $user);
long sys_uname(struct old_utsname *  $user);
long sys_iopl(unsigned long $user);
long sys_vhangup(void);
long sys_vm86old(struct vm86_struct * $user);
long sys_wait4(pid_t $user, unsigned int * $user, int $user, struct rusage * $user);
long sys_swapoff(const char * $user);
long sys_sysinfo(struct sysinfo * $user);
long sys_ipc(uint $user, int $user, int $user, int $user, void * $user, long $user);
long sys_fsync(unsigned int $user);
long sys_sigreturn(unsigned long $user);
long sys_clone(struct pt_regs $user);
long sys_setdomainname(char * $user, int $user);
long sys_newuname(struct new_utsname * $user);
long sys_modify_ldt(int $user, void * $user, unsigned long $user);
long sys_adjtimex(struct timex * $user);
long sys_mprotect(unsigned long $user, size_t $user, unsigned long $user);
long sys_sigprocmask(int $user, old_sigset_t * $user, old_sigset_t * $user);
long sys_create_module(const char * $user, size_t $user);
long sys_init_module(const char * $user, struct module * $user);
long sys_delete_module(const char * $user);
long sys_get_kernel_syms(struct kernel_sym * $user);
long sys_quotactl(int cmd, const char * $user, int $user, caddr_t $user);
long sys_getpgid(pid_t $user);
long sys_fchdir(unsigned int $user);
long sys_bdflush(int $user, long $user);
long sys_sysfs(int $user, unsigned long $user, unsigned long $user);
long sys_personality(u_long $user);
long sys_setfsuid16(old_uid_t $user);
long sys_setfsgid16(old_gid_t $user);
long sys_llseek(unsigned int $user, unsigned long $user, unsigned long $user, 
                loff_t * $user, unsigned int $user);
long sys_getdents(unsigned int $user, void * $user, unsigned int $user);
long sys_select(int $user, fd_set * $user, fd_set * $user, fd_set * $user, 
                struct timeval * $user);
long sys_flock(unsigned int $user, unsigned int $user);
long sys_msync(unsigned long $user, size_t $user, int  $user);
long sys_readv(unsigned long $user, const struct iovec * $user, unsigned long $user);
long sys_writev(unsigned long $user, const struct iovec * $user, unsigned long $user);
long sys_getsid(pid_t $user);
long sys_fdatasync(unsigned int $user);
long sys_sysctl(struct __sysctl_args $user);
long sys_mlock(unsigned long $user, size_t $user);
long sys_munlock(unsigned long $user, size_t $user);
long sys_mlockall(int $user);
long sys_munlockall(void);
long sys_sched_setparam(pid_t $user, struct sched_param * $user);
long sys_sched_getparam(pid_t $user, struct sched_param * $user);
long sys_sched_setscheduler(pid_t $user, int $user, struct sched_param * $user);
long sys_sched_getscheduler(pid_t $user);
long sys_sched_yield(void);
long sys_sched_get_priority_max(int $user);
long sys_sched_get_priority_min(int $user);
long sys_sched_rr_get_interval(pid_t $user, struct timespec * $user);
long sys_nanosleep(struct timespec * $user, struct timespec * $user);
long sys_mremap(unsigned long $user, unsigned long $user, unsigned long $user,
                unsigned long $user, unsigned long $user);
long sys_setresuid16(old_uid_t $user, old_uid_t $user, old_uid_t $user);
long sys_getresuid16(old_uid_t * $user, old_uid_t * $user, old_uid_t * $user);
long sys_vm86(unsigned long $user, struct vm86plus_struct * $user);
long sys_query_module(const char * $user, int $user, char * $user, size_t $user,
                      size_t * $user);
long sys_poll(struct pollfd * $user, unsigned int $user, long $user);
long sys_nfsservctl(int $user, void * $user, void * $user);
long sys_setresgid16(old_gid_t $user, old_gid_t $user, old_gid_t $user);
long sys_getresgid16(old_gid_t * $user, old_gid_t * $user, old_gid_t * $user);
long sys_prctl(int $user, unsigned long $user, unsigned long $user,
                          unsigned long $user, unsigned long $user);
long sys_rt_sigreturn(unsigned long $user);
long sys_rt_sigaction(int $user, const struct sigaction * $user, 
                      struct sigaction * $user, size_t $user);
long sys_rt_sigprocmask(int $user, sigset_t * $user, sigset_t * $user, size_t $user);
long sys_rt_sigpending(sigset_t * $user, size_t $user);
long sys_rt_sigtimedwait(const sigset_t * $user, siginfo_t * $user,
                         const struct timespec * $user, size_t $user);
long sys_rt_sigqueueinfo(int $user, int $user, siginfo_t * $user);
long sys_rt_sigsuspend(sigset_t * $user, size_t $user);
long sys_pread(unsigned int $user, char * $user, size_t $user, loff_t $user);
long sys_pwrite(unsigned int $user, const char * $user, size_t $user, loff_t $user);
long sys_chown16(const char * $user, old_uid_t $user, old_gid_t $user);
long sys_getcwd(char * $user, unsigned long $user);
long sys_capget(cap_user_header_t $user, cap_user_data_t $user);
long sys_capset(cap_user_header_t $user, const cap_user_data_t $user);
long sys_sigaltstack(const stack_t * $user, stack_t * $user);
long sys_sendfile(int $user, int $user, off_t * $user, size_t $user);
long sys_vfork(struct pt_regs $user);
long sys_getrlimit(unsigned int $user, struct rlimit * $user);
long sys_mmap2(unsigned long $user, unsigned long $user,
               unsigned long $user, unsigned long $user,
               unsigned long $user, unsigned long $user);
long sys_truncate64(const char * $user, loff_t $user);
long sys_ftruncate64(unsigned int $user, loff_t $user);
long sys_stat64(char * $user, struct stat64 * $user, long $user);
long sys_lstat64(char * $user, struct stat64 * $user, long $user);
long sys_fstat64(unsigned long $user, struct stat64 * $user, long $user);
long sys_lchown(const char * $user, uid_t $user, gid_t $user);
long sys_getuid(void);
long sys_getgid(void);
long sys_geteuid(void);
long sys_getegid(void);
long sys_setreuid(uid_t $user, uid_t $user);
long sys_setregid(gid_t $user, gid_t $user);
long sys_getgroups(int $user, gid_t * $user);
long sys_setgroups(int $user, gid_t * $user);
long sys_fchown(unsigned int $user, uid_t $user, gid_t $user);
long sys_setresuid(uid_t $user, uid_t $user, uid_t $user);
long sys_getresuid(uid_t * $user, uid_t * $user, uid_t * $user);
long sys_setresgid(gid_t $user, gid_t $user, gid_t $user);
long sys_getresgid(gid_t * $user, gid_t * $user, gid_t * $user);
long sys_chown(const char * $user, uid_t $user, gid_t $user);
long sys_setuid(uid_t $user);
long sys_setgid(gid_t $user);
long sys_setfsuid(uid_t $user);
long sys_setfsgid(gid_t $user);
long sys_pivot_root(const char * $user, const char * $user);
long sys_mincore(unsigned long $user, size_t $user,
        unsigned char * $user);
long sys_madvise(unsigned long $user, size_t $user, int $user);
long sys_getdents64(unsigned int $user, void * $user, unsigned int $user);
long sys_fcntl64(unsigned int $user, unsigned int $user, unsigned long $user);
long sys_gettid(void);
long sys_readahead(int $user, loff_t $user, size_t $user);
long sys_setxattr(char * $user, char * $user, void * $user, size_t $user, int $user);
long sys_lsetxattr(char * $user, char * $user, void * $user, size_t $user, int $user);
long sys_fsetxattr(int $user, char * $user, void * $user, size_t $user, int $user);
long sys_getxattr(char * $user, char * $user, void * $user, size_t $user);
long sys_lgetxattr(char * $user, char * $user, void * $user, size_t $user);
long sys_fgetxattr(int $user, char * $user, void * $user, size_t $user);
long sys_listxattr(char * $user, char * $user, size_t $user);
long sys_llistxattr(char * $user, char * $user, size_t $user);
long sys_flistxattr(int $user, char * $user, size_t $user);
long sys_removexattr(char * $user, char * $user);
long sys_lremovexattr(char * $user, char * $user);
long sys_fremovexattr(int $user, char * $user);
long sys_tkill(int $user, int $user);
